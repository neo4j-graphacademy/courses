---
description: Use these rules when developing Neo4j applications.
globs: 
alwaysApply: false
---
## Drivers

* Prefer `driver.executeQuery` with `{routing: 'READ'}` or `{routing: 'WRITE'}` in the third parameter over `session.run()` or opening a session and using `executeRead`/`executeWrite`.
* Write the query parameter directly rather than creating a separate variable.


## Writing data

* If you need to modify the graph where nodes follow a `MATCH` clause and may not exist, don't check for existance up front.  Instead simply run the `MATCH` clause followed by the write operation and return either the object or a count.  Check the output and if the number of rows is 0, it didn't exist in the first place.


## Reading data

* Avoid `OPTIONAL MATCH` if you are only returning data.  Use pattern comprehension instead and move it to the RETURN.

  For example, don't do this:
  ```
  MATCH (u:User)
  OPTIONAL MATCH (u)-[:HAS_ENROLMENT]->(e)
  RETURN u, collect(e) AS enrolments
  ```

  Instead, it should be:
  ```
  MATCH (u:User)
  RETURN u, [ (u)-[:HAS_ENROLMENT]->(e) | e ] AS  enrolments
  ```

