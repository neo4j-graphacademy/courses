extends ./_layout
include ../mixins/date

mixin error(errors, field)
  if errors[field]
    label.label-error(for=field) #{errors[field]}

//- block minor
//-   .redeem-reward
//-     img#preview(src=reward.image, alt=reward.title)

block major
  .account-header
    h1 Rewards &amp; Achievements

  .account-section.rewards
    h2 #{reward.title}

    if reward.status == 'claimed'
      h3 Order already placed

      p This offer has already been redeemed at
        | #{' '}
        +date(reward.redeemedAt)

      if reward.trackingUrl
        p
          a.btn(href=reward.trackingUrl target='_blank') Track your order

    else if reward.status == 'available'
      form.form.redeem-form#redeem-form(method='POST')
        p Complete the form below to redeem your reward.

        if errorMessage
          .form-alert.form-alert--danger
            p.title Error Processing Submission
            p #{errorMessage}
            ul
              for error in errors
                li #{error}

        .form-group.full
          label(for='selector') Style and Size
            span.required (required)
          select#selector(name='variant_id' required)
            option(value='' disabled selected ) Please select a style and size
            for product in products
              //-  optgroup(label=product.name)
              for group in product.variants
                optgroup(label=group.name)
                  for variant in group.variants
                    option(value=variant.id data-preview-url=variant.preview selected=input.variant_id === variant.id.toString() ? 'selected' : undefined) #{variant.name}

        .form-group.full &nbsp;

        .form-group.padded
          label(for='first_name').form-label First Name
            span.required (required)
          input#first_name(type='text' name='first_name' required minlength=2 maxlength=35 value=input.first_name)

        .form-group
          label(for='last_name').form-label Last Name
            span.required (required)
          input#last_name(type='text' name='last_name' required minlength=2 maxlength=35 value=input.first_name)

        .form-group.padded
          label(for='email') Email
            span.required (required)
          input#email(type='email' name='email' required value=input.email || user.email)
          +error(errors, 'email')


        .form-group
          label(for='phone').form-label Telephone Number
            span.required (required)
          input#phone(type='tel' name='phone' required minlength=10 maxlength=15 value=input.phone)
          +error(errors, 'phone')

        .form-group.padded
          label(for='address1') Address 1
            span.required (required)
          input#address1(type='text' name='address1' required minlength=10 maxlength=55 value=input.address1)
          +error(errors, 'address1')

        .form-group
          label(for='address2') Address 2
          input#address2(type='text' name='address2' value=input.address2)
          +error(errors, 'address2')

        .form-group.padded
          label(for='city').form-label City
            span.required (required)
          input#city(type='text' name='city' required minlength=3 maxlength=32 value=input.city)
          +error(errors, 'city')

        .form-group
          label(for='zip').form-label Zip/Postal Code
            span.required (required)
          input#zip(type='text' name='zip' required minlength=4 maxlength=10 value=input.zip)
          +error(errors, 'zip')

        .form-group.country.full
          label(for='country') Country
            span.required (required)
          select#country(name='country' required)
            option -
            for country in countries
              option(value=country.code selected=input.country == country.code) #{country.name}
          +error(errors, 'country')

        .form-group.state.full#state-container
          label(for='state') State
            span.required (required)
          select#state(name='state')
            if input.state
              option(value=input.state selected=input.state) #{input.state}
          +error(errors, 'state')

        .form-group.state.full#state-text-container
          label(for='state_text') State
            span.required (required)
          input#state_text(type='text' name='state_text' value=input.state_text)
          +error(errors, 'state_text')

        .form-group.tax.full#tax-container
          label(for='tax_number') Tax Number (CPF)
            span.required (required)
          input#tax_number(type='string' name='tax_number' maxlength=20 value=input.tax_number)
          +error(errors, 'tax_number')

        .form-buttons
          button.btn.btn--primary#submit(type='submit' disabled) Redeem Now

    else
      p This reward is not yet available.

      a.btn(href=reward.link) Complete #{reward.title}




  //- pre #{JSON.stringify(variants, null, 2)}

block scripts
  script(nonce=nonce).
    window.countries = !{JSON.stringify(countries)}