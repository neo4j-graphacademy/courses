name: Release

on:
    workflow_dispatch:
    push:
        tags:
            - 'v*' # Push events to matching v*, i.e. v1.0, v2.1.3

jobs:
    assets:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Use Node.js 16
              uses: actions/setup-node@v3
              with:
                  node-version: '16'

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.GA_DEPLOY_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.GA_DEPLOY_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.GA_AWS_REGION }}

            - name: Install NPM Dependencies
              run: npm install

            - name: Build CSS
              run: npm run build:css

            - name: Build Front-end JS
              run: npm run build:ui

            - name: Sync Assets
              uses: jakejarvis/s3-sync-action@master
              with:
                  args: --acl public-read
              env:
                  AWS_S3_BUCKET: ${{ secrets.GA_S3_BUCKET }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.GA_DEPLOY_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.GA_DEPLOY_SECRET_ACCESS_KEY }}
                  AWS_REGION: ${{ secrets.GA_AWS_REGION }}
                  SOURCE_DIR: 'public'
                  DEST_DIR: 'assets'

    invalidate-cache:
        runs-on: ubuntu-latest
        needs: assets
        steps:
            - name: Invalidate CloudFront Cache
              uses: chetan/invalidate-cloudfront-action@v2
              env:
                  DISTRIBUTION: ${{ secrets.GA_CLOUDFRONT_DISTRIBUTION }}
                  PATHS: '/assets'
                  AWS_REGION: ${{ secrets.GA_AWS_REGION }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.GA_DEPLOY_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.GA_DEPLOY_SECRET_ACCESS_KEY }}

    rebuild:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.GA_DEPLOY_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.GA_DEPLOY_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Login to Amazon ECR Private
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build and push
              uses: docker/build-push-action@v5
              env:
                  GITHUB_OAUTH_TOKEN: ${{ secrets.AC_GITHUB_OAUTH_TOKEN }}
              with:
                  context: .
                  push: true
                  tags: ${{ steps.login-ecr.outputs.registry }}/graphacademy:latest
    rollout:
        runs-on: ubuntu-latest
        needs: rebuild
        steps:
            - name: Install AWS CLI
              uses: unfor19/install-aws-cli-action@v1

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.GA_DEPLOY_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.GA_DEPLOY_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.GA_AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Rollout
              uses: kodermax/kubectl-aws-eks@main
              env:
                  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
              with:
                  args: rollout restart -n graphacademy-prod deployment/graphacademy
