name: Update AWS SecretsManager

on:
  workflow_dispatch:

jobs:
  set_environment:
    runs-on: ubuntu-latest
    steps:
      - name: Set up environment based on branch
        id: environment_check
        shell: bash
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BRANCH_NAME=${BRANCH_NAME#refs/tags/}
          
          ENVIRONMENT="development"
          if [[ "$BRANCH_NAME" == "main" ]]; then
            ENVIRONMENT="production"
          fi
          
          echo "environment=${ENVIRONMENT,,}" >> $GITHUB_OUTPUT
    outputs:
      environment: ${{ steps.environment_check.outputs.environment }}

  update_secrets:
    runs-on: ubuntu-latest
    needs: set_environment
    permissions:
      id-token: write
      contents: read
    env:
      ENVIRONMENT: ${{ needs.set_environment.outputs.environment }}
    steps:
      - name: Set env variables for secrets
        run: |
          echo "N_AWS_DEPLOY_ROLE_ARN=${ENVIRONMENT}_GH_OIDC_ROLE_ARN" >> $GITHUB_ENV
          echo "N_AWS_SECRET_ARN=${ENVIRONMENT}_GRAPHACADEMY_SECRET_ARN" >> $GITHUB_ENV

      - id: install-aws-cli
        if: ${{ env.ACT }}
        uses: unfor19/install-aws-cli-action@v1
        with:
          arch: amd64

      - name: Configure AWS credentials
        if: ${{ !env.ACT }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars[env.N_AWS_DEPLOY_ROLE_ARN] }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update secrets in AWS
        env:
          AWS_PAGER: ""
          GH_SECRETS: "${{ toJSON(secrets) }}"
          SECRET_ARN: ${{ vars[env.N_AWS_SECRET_ARN] }}
        run: |
          GA_SECRETS=$(echo $GH_SECRETS | jq --raw-output --arg prefix "${ENVIRONMENT^^}_AWS_SM_" 'with_entries(select(.key | startswith($prefix)) | .key |= sub($prefix; ""))')
          aws secretsmanager update-secret --region ${{ vars.AWS_REGION }} --secret-id "$SECRET_ARN" --secret-string "$GA_SECRETS"
