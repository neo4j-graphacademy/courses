{
    "GA Caption": {
        "scope": "asciidoc",
        "prefix": ":caption",
        "description": "The caption appears in grey under the header on the Course Overview page",
        "body": ":caption: ${1}"
    },
    "GA Updated At": {
        "prefix": ":upd",
        "description": "Add the :updated-at: attribute",
        "body": ":updated-at: ${1:$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE T $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND Z}"
    },
    "GA Course": {
        "scope": "asciidoc",
        "prefix": "gacou",
        "description": "Generate a course overview file",
        "body": [
            "= ${1:Course Title}",
            ":categories: ${2:beginners}:${3:5}",
            ":status: ${4|active,draft,redirect|}",
            ":next: ${5:modeling-fundamentals}",
            ":duration: ${6:2 hours}",
            ":caption: ${7:Learn how to import data into Neo4j}",
            "${8::usecase: ${9:blank-sandbox}}",
            ":video: ${10:https://www.youtube.com/embed/vVCHJFa01gA}",
            ":key-points: ${11:A comma, separated, list of learnings",
            "",
            "",
            "${12:Welcome to GraphAcademy, and this course..}",
            "",
            "== Prerequisites",
            "",
            "${13:To take this course we recommend that you have taken these beginner courses in GraphAcademy:",
            "",
            "${14:* link:/courses/neo4j-fundamentals/[Neo4j Fundamentals^]}}",
            "",
            "",
            "== Duration",
            "",
            "X hours",
            "",
            "",
            "== What you will learn",
            "",
            "${15:* Preparing for importing data}",
            "",
            "== What you will need",
            "",
            "${15:* Access to this thing}",
            "",
            "[.includes]",
            "== This course includes",
            "* [lessons]#X lessons#",
            "* [challenges]#X short hands-on challenges#",
            "* [videos]#X videos#",
            "* [quizes]#X multiple choice quizzes#",
        ]
    },
    "GA Module": {
        "scope": "asciidoc",
        "prefix": "gamod",
        "description": "Generate a module",
        "body": [
            "= ${1:Lesson Title}",
            ":order: 1",
            "",
            "[.video]",
            "video::${2:YouTubeVideoID}",
            "",
            "",
            "[.transcript]",
            "== Module Overview",
            "",
            "${3:In this module, you will learn about:}",
            "",
            "* ${4:Steps for importing data into Neo4j.}",
            "",
            "",
            "link:./1-lesson/[Ready? Let's go â†’, role=btn]",
            "",
            "== References",
            "",
            "* link:https://sandbox.neo4j.com[Neo4j Sandbox^]",
        ]
    },
    "GA Lesson": {
        "scope": "asciidoc",
        "prefix": "gales",
        "description": "Generate a lesson",
        "body": [
            "= ${1:Lesson Title}",
            ":order: 1",
            ":type: lesson",
            "",
            "${2:[.video]",
            "video::${3:YouTubeVideoID}}",
            "",
            "",
            "[.transcript]",
            "== ${4:Section Title}",
            "",
            "${5:Lorem ipsum...}",
            "",
            ""
        ]
    },
    "GA Check your understanding": {
        "scope": "asciidoc",
        "prefix": ".cyu",
        "description": "Check Your Understanding",
        "body": [
            "== Check Your Understanding",
            "",
            "",
        ]
    },
    "GA Question - Single & Multiple Choices": {
        "scope": "asciidoc",
        "prefix": ".quech",
        "description": "Check Your Understanding",
        "body": [
            "[.question]",
            "= ${1:1. Which of the following programming languages have officially supported drivers?}",
            "",
            "${2:* ${3:[*] Correct 1}}",
            "${4:* ${5:[*] Correct 2}}",
            "${6:* ${7:[ ] Incorrect 1}}",
            "${8:* ${8:[ ] Incorrect 2}}",
            "",
            "",
            "[TIP,role=hint]",
            ".Hint",
            "====",
            "${9:These are the key elements of a Neo4j property graph.}",
            "====",
            "",
            "[TIP,role=solution]",
            ".Solution",
            "====",
            "${10:These are the key elements of a Neo4j property graph.}",
            "====",
        ]
    },
    "GA Question - Free Text": {
        "scope": "asciidoc",
        "prefix": ".queft",
        "description": ":type: freetext",
        "body": [
            "",
            "[.question.freetext]",
            "= ${1:1. Question?}",
            "",
            "{2:xxx}",
            "",
            "input::answer[]",
            "",
            "* [x] ${3:<correct answer>}",
            "",
            "[TIP,role=hint]",
            ".Hint",
            "====",
            "${9:These are the key elements of a Neo4j property graph.}",
            "====",
            "",
            "[TIP,role=solution]",
            ".Solution",
            "====",
            "${10:These are the key elements of a Neo4j property graph.}",
            "====",
        ],
    },
    "GA Question - Select in Source": {
        "scope": "asciidoc",
        "prefix": ".quessrc",
        "description": ":type: select-in-source",
        "body": [
            "",
            "[.question.freetext]",
            "= ${1:1. Question?}",
            "",
            "{2:xxx}",
            "",
            "",
            "[source,cypher,role=nocopy noplay]",
            "----",
            "${3:MATCH (m:Movie)",
            "/*select:WHERE m.title = 'The Matrix'*/",
            "RETURN m.tagline}",
            "----",
            "",
            "",
            "${4:* [ ] `SELECT m.title = 'The Matrix'`}",
            "${5:* [ ] `FROM {title: 'The Matrix'}`}",
            "${6:* [x] `WHERE m.title = 'The Matrix'`}",
            "",
            "[TIP,role=hint]",
            ".Hint",
            "====",
            "${9:These are the key elements of a Neo4j property graph.}",
            "====",
            "",
            "[TIP,role=solution]",
            ".Solution",
            "====",
            "${10:These are the key elements of a Neo4j property graph.}",
            "====",
        ],
    },
    "GA Question - Input in Source": {
        "scope": "asciidoc",
        "prefix": ".queisrc",
        "description": ":type: input-in-source",
        "body": [
            "",
            "[.question.freetext]",
            "= ${1:1. Question?}",
            "",
            "{2:xxx}",
            "",
            "[source,cypher,role=nocopy noplay]",
            "----",
            "${3:MATCH (m: /*input*/ {title: 'The Matrix'})<-[:ACTED_IN]-(p:Person)",
            "RETURN m.title, p.name",
            "----",
            "",
            "* [x] ${4:<correct answer>}",
            "",
            "[TIP,role=hint]",
            ".Hint",
            "====",
            "${9:These are the key elements of a Neo4j property graph.}",
            "====",
            "",
            "[TIP,role=solution]",
            ".Solution",
            "====",
            "${10:These are the key elements of a Neo4j property graph.}",
            "====",
        ],
    },
    "GA Hint": {
        "scope": "asciidoc",
        "prefix": ".hint",
        "description": "[TIP,role=hint]",
        "body": [
            "[TIP,role=hint]",
            ".Hint",
            "====",
            "${1:These are the key elements of a Neo4j property graph.}",
            "====",
            "",
        ]
    },
    "GA Solution": {
        "scope": "asciidoc",
        "prefix": ".solution",
        "description": "[TIP,role=solution]",
        "body": [
            "[TIP,role=solution]",
            ".Solution",
            "====",
            "${1:These are the key elements of a Neo4j property graph.}",
            "====",
            "",
        ]
    },
    "GA Hint & Solution": {
        "scope": "asciidoc",
        "prefix": ".hisol",
        "description": "[TIP,role=solution]",
        "body": [
            "[TIP,role=hint]",
            ".Hint",
            "====",
            "${1:These are the key elements of a Neo4j property graph.}",
            "====",
            "",
            "[TIP,role=solution]",
            ".Solution",
            "====",
            "${2:These are the key elements of a Neo4j property graph.}",
            "====",
            "",
        ]
    },
    "GA Question ID": {
        "scope": "asciidoc",
        "prefix": ":id",
        "description": "Generate a Question ID attribute and block for a question",
        "body": [
            ":id: q${1:1}",
            "[#{id}.question]"
        ]
    },
    "GA Question ID #": {
        "scope": "asciidoc",
        "prefix": "#id",
        "description": "Generate an #{id}",
        "body": [
            "#{id}"
        ]
    },
    "Asciidoc Tip": {
        "scope": "asciidoc",
        "prefix": "atip",
        "description": "[TIP]",
        "body": [
            "[TIP${1:,role=solution}]",
            "${2:.Title}",
            "====",
            "${3:These are the key elements of a Neo4j property graph.}",
            "====",
        ]
    },
    "Asciidoc Note": {
        "scope": "asciidoc",
        "prefix": "anote",
        "description": "[NOTE]",
        "body": [
            "[NOTE${1:,role=solution}]",
            "${2:.Title}",
            "====",
            "${3:These are the key elements of a Neo4j property graph.}",
            "====",
        ]
    },
    "Asciidoc Important": {
        "scope": "asciidoc",
        "prefix": "aimportant",
        "description": "[IMPORTANT]",
        "body": [
            "[IMPORTANT${1:,role=solution}]",
            ".${2:Title}",
            "====",
            "${3:These are the key elements of a Neo4j property graph.}",
            "====",
        ]
    },
    "Asciidoc Caution": {
        "scope": "asciidoc",
        "prefix": "acaution",
        "description": "[CAUTION]",
        "body": [
            "[CAUTION${1:,role=solution}]",
            "${2:.Title}",
            "====",
            "${3:These are the key elements of a Neo4j property graph.}",
            "====",
        ]
    },
    "Asciidoc Warning": {
        "scope": "asciidoc",
        "prefix": "awarning",
        "description": "[WARNING]",
        "body": [
            "[WARNING${1:,role=solution}]",
            "${2.:Title}",
            "${2:.Title}",
            "====",
            "${3:These are the key elements of a Neo4j property graph.}",
            "====",
        ]
    },
    "Cypher Code Block": {
        "scope": "asciidoc",
        "prefix": "acypher",
        "description": "[source,cypher]",
        "body": [
            ".${2:Title}",
            "[source,${3:cypher}]${4}",
            "----",
            "${5:MATCH (n) RETURN count(n) AS count}",
            "----",
        ]
    },
    "Highlight": {
        "scope": "asciidoc",
        "prefix": "highlight",
        "description": "Highlight an element in Workspace",
        "body": "highlight:${1:import}/${2:import-file-view}[text=\"${3:Files pane}\"]"
    },
    "NDL Icon": {
        "scope": "asciidoc",
        "prefix": "icon",
        "description": "Select an icon from NDL",
        "body": "icon:${1|Pencil,Check,Trash|}Icon[]"
    },
    "Lab Attributes": {
        "scope": "asciidoc",
        "prefix": ":labattr",
        "description": "Lab attributes",
        "body": [
            ":lab-filename: ${1:api/dao/auth.py}",
            ":lab: {repository-blob}/${2:main}/${3:src}/{lab-filename}",
            "${4::optional: true}",
        ]
    },
    "Lab Button": {
        "scope": "asciidoc",
        "prefix": "lab",
        "description": "Lab button",
        "body": "lab::Open `${1:{lab-filename\\}}`[]"
    },
    "Let's go!": {
        "scope": "asciidoc",
        "prefix": "go",
        "body": "link:${1:./1-installation/}[${2:Ready? Let's go} â†’, role=btn]"
    },
    "Node": {
        "scope": "asciidoc",
        "prefix": "ganode",
        "body": "`(:${1:Person})`"
    },
    "Relationship": {
        "scope": "asciidoc",
        "prefix": "garel",
        "body": "`-[:${1:HAS}]-${2:>}`"
    }
    "Continue To...": {
        "scope": "asciidoc",
        "prefix": "continue",
        "body": "link:${1:./1-installation/}[Continue to ${2:Lesson Title} â†’, role=btn]"
    },
}