= Building applications with MCP tools
:type: challenge 
:optional: true

* Tools can be run in parallel by the agent
* The agent is tasked with selecting the correct tools in sequence, executing them and in a loop until the task is complete
* You can use this to your advantage by getting the agent to quickly build an application 
* The output is probablistic, so the application may be slightly different but you should get the same answer from the database.  That's the goal of RAG afterall!


* Instruct the agent to build an python program where you enter a Genre, then it returns the top 5 movies in that genre. 
* The agent must validate the cypher statement it writes on real data before it creates the application. 

* Verify the application works by getting the top movie in the Mystery genre.  (The answer is Inception)


.Prompt
====
include::includes/prompt.txt[]
====

[%collapsible]
.Example application
====

[source,python]
----
include::includes/solution.py[]
----

====

